スタック操作単語情報型は　型紙
        スタック操作単語名は　文字列
        スタックロード数は　バイト変数
        スタック操作でremoveFirstを使用するかは　バイト変数
        スタック操作でremoveを使用するかは　バイト変数
        スタック操作でaddFirstを使用するかは　バイト変数
        スタック操作でgetFirstを使用するかは　バイト変数
        スタック操作でsizeを使用するかは　バイト変数
        スタック操作でIntegerValueOfを使用するかは　バイト変数
        スタック操作でIntegerIntValueを使用するかは　バイト変数

    スタック操作単語情報は
        スタック操作単語名と
        スタックロード数と
        スタック操作でremoveFirstを使用するかと
        スタック操作でremoveを使用するかと
        スタック操作でaddFirstを使用するかと
        スタック操作でgetFirstを使用するかと
        スタック操作でsizeを使用するかと
        スタック操作でIntegerValueOfを使用するかと
        スタック操作でIntegerIntValueを使用するか
    全体は　６個の　スタック操作単語情報。

スタック操作単語情報集は　構造体　スタック操作単語情報型。

（・ー＞・）
※構造体の変数が多いのと、データが特殊な為、そのまま追加する
スタック操作単語情報集を初期化とは
    スタック操作単語情報集を　クリアし

    「指定番号スタック要素得」を
    スタック操作単語情報集の　スタック操作単語名（１）に　入れ
    ３を
    スタック操作単語情報集の　スタックロード数（１）に　入れ
    スタック操作単語情報集の　スタック操作でremoveFirstを使用するか（１）を　セットし
    スタック操作単語情報集の　スタック操作でremoveを使用するか（１）を　セットし
    スタック操作単語情報集の　スタック操作でaddFirstを使用するか（１）を　セットし
    スタック操作単語情報集の　スタック操作でIntegerIntValueを使用するか（１）を　セットし

    「捨」を
    スタック操作単語情報集の　スタック操作単語名（２）に　入れ
    １を
    スタック操作単語情報集の　スタックロード数（２）に　入れ
    スタック操作単語情報集の　スタック操作でremoveFirstを使用するか（２）を　セットし

    「複写」を
    スタック操作単語情報集の　スタック操作単語名（３）に　入れ
    ２を
    スタック操作単語情報集の　スタックロード数（３）に　入れ
    スタック操作単語情報集の　スタック操作でgetFirstを使用するか（３）を　セットし
    スタック操作単語情報集の　スタック操作でaddFirstを使用するか（３）を　セットし

    「スタックサイズ」を
    スタック操作単語情報集の　スタック操作単語名（４）に　入れ
    ２を
    スタック操作単語情報集の　スタックロード数（４）に　入れ
    スタック操作単語情報集の　スタック操作でsizeを使用するか（４）を　セットし
    スタック操作単語情報集の　スタック操作でIntegerValueOfを使用するか（４）を　セットし
    スタック操作単語情報集の　スタック操作でaddFirstを使用するか（４）を　セットし

    「二番目捨」を
    スタック操作単語情報集の　スタック操作単語名（５）に　入れ
    １を
    スタック操作単語情報集の　スタックロード数（５）に　入れ
    スタック操作単語情報集の　スタック操作でremoveを使用するか（５）を　セットし

    「スワップ」を
    スタック操作単語情報集の　スタック操作単語名（６）に　入れ
    ２を
    スタック操作単語情報集の　スタックロード数（６）に　入れ
    スタック操作単語情報集の　スタック操作でremoveを使用するか（６）を　セットし
    スタック操作単語情報集の　スタック操作でaddFirstを使用するか（６）を　セットし。

（文字列ー＞インデックス・真）
（文字列ー＞偽）
定義済みスタック操作単語？とは
    検査文字列は　文字列
    検査文字列に　入れ
    スタック操作単語情報の　要素数を　回数指定し、
        スタック操作単語情報集の　スタック操作単語名（回数）と　検査文字列が　等しい文字列　ならば
            回数と　真をつみ　終わり
        つぎに
    繰り返し、
    偽を　返すこと。

※この単語のスタック状態は～を使用するか変数によって可変となります。
（インデックスー＞）
※removeFirstインデックス・
※removeインデックス・
※addFirstインデックス・
※getFirstインデックス・
※sizeインデックス・
※IntegerValueOfインデックス・
※Integerインデックス・
※IntegerIntValueインデックス
スタック操作単語の定数フィールドを追加するとは
    インデックスは　変数

    本体とは
    インデックスに　入れ

    スタック操作単語情報集の
    スタック操作でremoveFirstを使用するか（インデックス）が　真？　ならば
        pop関数を得て、
    つぎに

    スタック操作単語情報集の
    スタック操作でremoveを使用するか（インデックス）が　真？　ならば
        remove関数を得て、
    つぎに

    スタック操作単語情報集の
    スタック操作でaddFirstを使用するか（インデックス）が　真？　ならば
        push関数を得て
    つぎに

    スタック操作単語情報集の
    スタック操作でgetFirstを使用するか（インデックス）が　真？　ならば
        ※Methodref
        メソッドランタイム定数フィールド数で
        「java/util/LinkedList」と　「getFirst」と　「()Ljava/lang/Object;」で
        Methodランタイム定数フィールド情報を得て　
        ランタイム定数フィールド取得後処理し
    つぎに

    スタック操作単語情報集の
    スタック操作でsizeを使用するか（インデックス）が　真？　ならば
        ※Methodref
        メソッドランタイム定数フィールド数で
        「java/util/LinkedList」と　「size」と　「()I」で
        Methodランタイム定数フィールド情報を得て
        ランタイム定数フィールド取得後処理し
    つぎに

    スタック操作単語情報集の
    スタック操作でIntegerValueOfを使用するか（インデックス）が　真？　ならば
        ※Methodref
        メソッドランタイム定数フィールド数と
        「java/lang/Integer」と　「valueOf」と　「(I)Ljava/lang/Integer;」で
        Methodランタイム定数フィールド情報を得て
        ランタイム定数フィールド取得後処理し
    つぎに

    スタック操作単語情報集の
    スタック操作でIntegerIntValueを使用するか（インデックス）が　真？　ならば
        ※Class
        メソッドランタイム定数フィールド数と
        「java/lang/Integer」で
        クラスランタイム定数フィールド情報を得て　
        ランタイム定数フィールド取得後処理し

        ※Methodref
        メソッドランタイム定数フィールド数と
        「java/lang/Integer」と　「intValue」と　「()I」で
        Methodランタイム定数フィールド情報を得て　
        ランタイム定数フィールド取得後処理し
    つぎに。

単語認識指定番号スタック要素得時の処理は　仮定義。
単語認識捨時の処理は　仮定義。
単語認識複写時の処理は　仮定義。
単語認識スタックサイズ時の処理は　仮定義。
単語認識二番目捨時の処理は　仮定義。
単語認識スワップ時の処理は　仮定義。

（インデックスー＞・）
※    aload_<Stack>
※    invokevirtual (StackMethod)
単語認識スタック操作単語時の処理とは、
    インデックスは　変数

    インデックスに　入れ

    インデックスをつかい
    スタック操作単語の定数フィールドを追加し

    スタック操作単語情報集の
    スタックロード数（インデックス）を　回数指定し
        Stackaloadのデータを得て
        オペコードのバイナリを追加し
    繰り返してから

    インデックスで
    事例をとる
        １なら　単語認識指定番号スタック要素得時の処理をし
        ２なら　単語認識捨時の処理をし
        ３なら　単語認識複写時の処理をし
        ４なら　単語認識スタックサイズ時の処理をし
        ５なら　単語認識二番目捨時の処理をし
        ６なら　単語認識スワップ時の処理をし
        例外なら　無処理
    事例終わり。

単語認識指定番号スタック要素得時の処理は　本定義
    removeFirstインデックスは　変数
    removeインデックスは　変数
    addFirstインデックスは　変数
    Integerインデックスは　変数
    IntegerIntValueインデックスは　変数

    removeFirstインデックスと
    removeインデックスと
    addFirstインデックスと
    Integerインデックスと
    IntegerIntValueインデックスに　入れ
    
    removeFirstインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し
    Integerインデックスで　checkcastのデータを得て　オペコードのバイナリを追加し
    IntegerIntValueインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し
    １で　iconst_iのデータを得て　オペコードのバイナリを追加し
    isubのデータを得て　オペコードのバイナリを追加し
    removeインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し
    addFirstインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し。

単語認識捨時の処理は　本定義
    removeFirstインデックスは　変数

    removeFirstインデックスに　入れ

    removeFirstインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し
    popのデータを得て　オペコードのバイナリを追加し。

単語認識複写時の処理は　本定義
    addFirstインデックスは　変数
    getFirstインデックスは　変数

    addFirstインデックスと
    getFirstインデックスに　入れ

    getFirstインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し
    addFirstインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し。

単語認識スタックサイズ時の処理は　本定義
    sizeインデックスは　変数
    IntegerValueOfインデックスは　変数
    addFirstインデックスは　変数

    addFirstインデックスと
    sizeインデックスと
    IntegerValueOfインデックスに　入れ

    sizeインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し
    IntegerValueOfインデックスで　invokestaticのデータを得て　オペコードのバイナリを追加し
    addFirstインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し。

単語認識二番目捨時の処理は　本定義
    removeインデックスは　変数

    removeインデックスに　入れ

    １で　iconst_iのデータを得て　オペコードのバイナリを追加し
    removeインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し
    popのデータを得て　オペコードのバイナリを追加し。

単語認識スワップ時の処理は　本定義
    removeインデックスは　変数
    addFirstインデックスは　変数

    removeインデックスと
    addFirstインデックスに　入れ

    １で　iconst_iのデータを得て　オペコードのバイナリを追加し
    removeインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し
    addFirstインデックスで　invokevirtualのデータを得て　オペコードのバイナリを追加し。