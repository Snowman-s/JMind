選択枝gotoバイトファイルは　ファイル。
選択枝gotoバイトファイル名は　文字列定数
    ".\data\selectbranch.dat"。

選択単語名は　文字列定数　「選択」。

（文字列ー＞真偽）
定義済み選択単語？とは
    選択単語名と　等しい文字列かを　返すこと。

（・ー＞IndexOutOfBoundsインデックス・文字列インデックス・<init>インデックス）
選択単語の定数フィールドを追加するとは
    ※Class
    メソッドランタイム定数フィールド数と
    「java/lang/IndexOutOfBoundsException」で
    クラスランタイム定数フィールド情報を得て
    ランタイム定数フィールド取得後処理し
    (IndexOutOfBoundsインデックスがつまれた)

    ※String
    ００８Ｈと
    メソッドランタイム定数フィールド数に　二つ加えたものを
    二バイト合成し、　３バイトで　バイト数指定で文字列化し
    ランタイム定数フィールドをメモファイルに書き込み、

    ※UTF8
    "「選択」の添え字が範囲外です。"を　ＵＴＦ８へ変換し
    ＵＴＦ８のランタイム定数フィールドを得て
    ランタイム定数フィールドをメモファイルに書き込み、

    メソッドランタイム定数フィールド数に　一つ加えてつみ
    (エラーメッセージインデックスがつまれた)
    メソッドランタイム定数フィールド数を　２つ　増加させ
    
    ※Methodref
    メソッドランタイム定数フィールド数と
    「java/lang/IndexOutOfBoundsException」と
    「<init>」と
    「(Ljava/lang/String;)V」で
    Methodランタイム定数フィールド情報を得て　
    ランタイム定数フィールド取得後処理し　
    (initインデックスがつまれた)。

（・ー＞・）
単語認識選択時の処理とは
    選択内単語数は　変数

    IndexOutOfBoundsインデックスは　変数
    エラーメッセージインデックスは　変数
    <init>インデックスは　変数

    breakのバイト数は　変数
    選択開始バイト位置は　変数
    default開始バイト位置は　変数
    ジャンプオフセットバイト位置は　変数
    最後のバイト位置は　変数
    余白は　変数

    選択内単語数を　クリアし

    選択単語の定数フィールドを追加し、
    IndexOutOfBoundsインデックスと
    エラーメッセージインデックスと
    <init>インデックスに　入れ

    ※選択内単語カウントアップ
    ここから
        関数定義文字列ファイルより一単語読み出し、識別子を得て　「選択終」と　等しい文字列　ならば
            打ち切り
        つぎに
        選択内単語数を　一つ増加させ
    繰り返し

    １で　指定数整数を取り出すオペコードを追加し

    真で　オペコードメモバイト数をえて
    選択開始バイト位置に　入れ

    ※！！！！スタックマップテーブル
    Integerのスタックマップテーブルデータを得てつみ
    選択開始バイト位置で
    スタックマップテーブルFullFrameデータをJVMスタック1で追加し

    tableswitchヘッダのデータを得て、オペコードのバイナリを追加し
    
    ４から
    選択開始バイト位置に　一つ加えたのち　４で　割った余りを
    引き　数値ログし　余白に　入れ

    余白が　４に　等しい　ならば
        余白を　クリアし
    つぎに
    ０を　余白だけ　オペコードのバイナリを追加し

    選択開始バイト位置に　余白を　加え　一つ加え
    default開始バイト位置に　入れ

    ※defaultbyte
    ０を　４バイトで　オペコードのバイナリを追加し

    ※lowbyte
    １を　４バイトで　オペコードのバイナリを追加し

    ※highbyte
    選択内単語数を　４バイトで　オペコードのバイナリを追加し

    真で　オペコードメモバイト数をえて
    ジャンプオフセットバイト位置に　入れ

    ※jump offsets...
    選択内単語数を　回数指定し
        ０を　４バイトで　オペコードのバイナリを追加し
    繰り返し

    ※！！！！スタックマップテーブル
    真で　オペコードメモバイト数より
    スタックマップテーブルSameデータを可能なら短縮して追加し

    ※巻き戻し
    選択内単語数に　（選択終わりを）　一つ加え　回数指定し
        関数定義文字列ファイル一単語巻き戻し
    繰り返し

    選択枝gotoバイトファイル名で
    選択枝gotoバイトファイルを　新規オープンし
    エラー処理し

    選択内単語数を　回数指定し
        ※tableswitchのjump offsets...
        真で　オペコードメモバイト数をえて、
        選択開始バイト位置を　引いたものを
        ４バイトで　バイト数指定で文字列化し

        ジャンプオフセットバイト位置と
        回数－１に　４を　掛けたものを　加えたとこで
        オペコードメモファイルを一部変更し

        ※単語書き込み
        関数定義文字列ファイルより一単語読み出し　識別子を得て　単語認識し
        複写して　一単語で終わらない？　ならば
            「この単語は使用できません」で　コンパイルエラー
        つぎに
        認識単語に相当する処理をし

        真で　オペコードメモバイト数をえて　４バイトで　バイト数指定で文字列化し　
        選択枝gotoバイトファイルに　書き込み

        ※goto書き込み
        ０で　gotoのデータを得て　オペコードのバイナリを追加し
        ※！！！！スタックマップテーブル
        真で　オペコードメモバイト数より
        スタックマップテーブルSameデータを可能なら短縮して追加し
    繰り返し

    選択枝gotoバイトファイルを　クローズし
    エラー処理し

    ※例外始め
    真で　オペコードメモバイト数をつみ、選択開始バイト位置を　引き
    ４バイトで　バイト数指定で文字列化し

    default開始バイト位置の
    オペコードメモファイルを一部変更し

    IndexOutOfBoundsインデックスで　newのデータを得て
    オペコードのバイナリを追加し

    dupのデータを得て
    オペコードのバイナリを追加し

    エラーメッセージインデックスで　ldcのデータを得て
    オペコードのバイナリを追加し

    <init>インデックスで　invokespecialのデータを得て
    オペコードのバイナリを追加し

    athrowのデータを得て
    オペコードのバイナリを追加し

    ※例外終わり

    真で　オペコードメモバイト数をえて　複写し
    スタックマップテーブルSameデータを可能なら短縮して追加したのちに
    最後のバイト位置に　入れ

    選択枝gotoバイトファイルを　再オープンし
    エラー処理し

    ※gotoの書き込み
    選択内単語数を　回数指定し
        ※breakのバイト数をつむ
        ０をつみ
        ４バイトを　回数指定し
            選択枝gotoバイトファイルから　一バイト読み出し
            ８ビットに　４から　回数を　引いたものを　掛けただけ
            左シフトし　加えることを
        繰り返し
        breakのバイト数に　入れ

        最後のバイト位置から　breakのバイト数を　引き
        gotoのデータを得て　バイト数指定で文字列化し

        breakのバイト数の
        オペコードメモファイルを一部変更し
    繰り返し

    選択枝gotoバイトファイルを　クローズし
    エラー処理し

    関数定義文字列ファイルより一単語読み出し　捨て　（「選択終わり」のはず）
。