（構造体情報・整数ー＞Integer.valueOf()インデックス・追加された数値インデックス・追加した定数フィールド数）
※注意！「定数フィールドの数」は　増加していません！
整数の定数フィールドを追加するとは
    関数認識構造体情報は　構造体情報
    追加整数は　変数
    追加された数は　変数
    ValueOfインデックスは　変数

    （文字列・バイトー＞・）
    文字列化して追加とは
        バイト数指定で文字列化したものを、
        関数認識構造体情報をつかい
        ランタイム定数フィールドをメモファイルに書き込み、

    本体とは
        関数認識構造体情報と　追加整数に　入れ
        追加された数を　クリアし

        ※Methodref
        関数認識構造体情報の　ランタイム定数フィールド数に　追加された数を　加え
        「java/lang/Integer」と　「valueOf」と　「(I)Ljava/lang/Integer;」で
            Methodランタイム定数フィールド情報を得て　偽？　ならば
            関数認識構造体情報をつかい
            ランタイム定数フィールドをメモファイルに書き込み
            追加された数を　増加させ
        つぎに
        ValueOfインデックスに　入れ
            ※！！！
            ValueOfインデックスをつみ

        ※Integer
        ０３Ｈを　１バイトで　文字列化して追加し
        追加整数を　４バイトで　文字列化して追加し
        追加された数を　一つ増加させ

        関数認識構造体情報の　ランタイム定数フィールド数に　追加された数を　加えたものと
        追加された数を　返すこと。

（構造対情報・整数ー＞・）
単語認識整数時の処理とは
    関数認識構造体情報は　構造体情報
    操作整数は　変数

    関数認識構造体情報と　操作整数に　入れ

    「これは整数です」を　一行表示し
    操作整数を　数値表示し　改行し

    関数認識構造体情報に　操作整数をつかい
    整数の定数フィールドを追加し、
    関数認識構造体情報の　ランタイム定数フィールド数を
    （追加した数だけ）　増加させ

    ※ここから、オペコード情報
    ※aload_1
    １で　aload_nのデータを得て　関数認識構造体情報の　オペコードのバイナリを追加し

    ※9: ldc
    (返り値で)　ldcのデータを得て
    関数認識構造体情報の　オペコードのバイナリを追加し

    ※11: invokestatic
    (返り値で)　invokestaticのデータを得て
    関数認識構造体情報の　オペコードのバイナリを追加し

    ※invokevirtual //Method
    push関数を得て、invokevirtualのデータを得て　関数認識構造体情報の　オペコードのバイナリを追加し

    ※pop
    popのデータを得て　関数認識構造体情報の　オペコードのバイナリを追加すること。