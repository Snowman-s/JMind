整数の定数フィールド読み込み済みは　変数。
IntegerValueOfのインデックスは　変数。

(・->・)
整数の定数フィールドの認識情報をクリアするとは
    整数の定数フィールド読み込み済みに　偽を　入れ
    IntegerValueOfのインデックスを　クリアし。

（構造体情報・整数ー＞Integer.valueOf()インデックス・追加された数値インデックス・追加した定数フィールド数）
※注意！「定数フィールドの数」は　増加していません！
整数の定数フィールドを追加するとは
    関数認識構造体情報は　構造体情報
    追加整数は　変数
    追加された数は　変数

    （文字列・バイトー＞・）
    文字列化して追加とは
        バイト数指定で文字列化したものを、　関数認識構造体情報の　ランタイム定数フィールドに　追加し

    本体とは
        関数認識構造体情報と　追加整数に　入れ
        追加された数を　クリアし
        整数の定数フィールド読み込み済みが　偽？　ならば
            ※Methodref #n+1         #n+2.#n+3
            ０ＡＨを　１バイトで　文字列化して追加し
            関数認識構造体情報の　ランタイム定数フィールド数に　二つ加えたものを　２バイトで　文字列化して追加し
            関数認識構造体情報の　ランタイム定数フィールド数に　３つ　加えたものを　２バイトで　文字列化して追加し

            ※Class #n+2 - #n+4
            ０７Ｈを　１バイトで　文字列化して追加し
            関数認識構造体情報の　ランタイム定数フィールド数に　４つ　加えたものを　２バイトで　文字列化して追加し

            ※NameAndType #n+3 - #n+5,#n+6
            ０ＣＨを　１バイトで　文字列化して追加し
            関数認識構造体情報の　ランタイム定数フィールド数に　５つ　加えたものを　２バイトで　文字列化して追加し
            関数認識構造体情報の　ランタイム定数フィールド数に　６つ　加えたものを　２バイトで　文字列化して追加し

            ※UTF8 #n+4 java/lang/Integer
        	「java/lang/Integer」を
            ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て
            関数認識構造体情報の　ランタイム定数フィールドに　追加し、

            ※UTF8 #n+5 valueOf
        	「valueOf」を
            ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て
            関数認識構造体情報の　ランタイム定数フィールドに　追加し、

            ※UTF8 #n+6 (I)Ljava/lang/Integer; 
        	「(I)Ljava/lang/Integer;」を
            ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て
            関数認識構造体情報の　ランタイム定数フィールドに　追加し、
            
            追加された数を　６つ　増加させ
            整数の定数フィールド読み込み済みに　真を　入れ
            
            関数認識構造体情報の　ランタイム定数フィールド数に　一つ加え
            IntegerValueOfのインデックスに　入れ
        つぎに

        ※Integer #n+1 or #n+7
        ０３Ｈを　１バイトで　文字列化して追加し
        追加整数を　４バイトで　文字列化して追加し
        追加された数を　一つ増加させ
        
        IntegerValueOfのインデックスと
        関数認識構造体情報の　ランタイム定数フィールド数に　追加された数を　加えたものと
        追加された数を　返すこと。

（構造対情報・整数ー＞・）
単語認識整数時の処理とは
    関数認識構造体情報は　構造体情報
    操作整数は　変数

    関数認識構造体情報と　操作整数に　入れ

    「これは整数です」を　一行表示し
    操作整数を　数値表示し　改行し

    関数認識構造体情報に　操作整数をつかい
    整数の定数フィールドを追加し、
    関数認識構造体情報の　ランタイム定数フィールド数を
    （追加した数だけ）　増加させ

    ※ここから、オペコード情報
    ※aload_1
    １で　aload_nのデータを得て　関数認識構造体情報の　オペコードのバイナリを追加し

    ※9: ldc
    (返り値で)　ldcのデータを得て
    関数認識構造体情報の　オペコードのバイナリを追加し

    ※11: invokestatic
    (返り値で)　invokestaticのデータを得て
    関数認識構造体情報の　オペコードのバイナリを追加し

    ※invokevirtual //Method
    push関数を得て、invokevirtualのデータを得て　関数認識構造体情報の　オペコードのバイナリを追加し

    ※pop
    popのデータを得て　関数認識構造体情報の　オペコードのバイナリを追加すること。