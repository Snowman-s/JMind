表示単語情報型は　型紙
        表示単語関数名は　文字列
        表示メソッドインスタンス名は　文字列
        表示メソッド名は　文字列
        表示メソッド型全体は　文字列
        
            表示メソッド引数型は　文字列
        表示メソッド引数型配列は　１０個の　表示メソッド引数型

        表示メソッド引数数は　変数

    関数情報は　表示単語関数名と　
                表示メソッドインスタンス名と
                表示メソッド名と 　表示メソッド型全体と
                表示メソッド引数型配列と　表示メソッド引数数
    全体は　５個の　関数情報。

表示単語情報は　暗黙の構造体　表示単語情報型。

（文字列ー＞インデックス・真）
（文字列ー＞偽）
定義済み表示関数？とは
    検査文字列は　文字列
    検査文字列に　入れ
    関数情報の　要素数を　回数指定し、
        表示単語情報の　表示単語関数名（回数）と　検査文字列が　等しい文字列　ならば
            回数と　真をつみ　終わり
        つぎに
    繰り返し、
    偽を　返すこと。

（・ー＞・）
表示単語情報を初期化とは
    表示単語情報の　表示単語関数名（１）に　「何表示」を　入れ
    表示単語情報の　表示メソッドインスタンス名（１）に　「out」を　入れ
    表示単語情報の　表示メソッド名（１）に　「print」を　入れ
    表示単語情報の　表示メソッド型全体（１）に　「(Ljava/lang/Object;)V」を　入れ、
    表示単語情報の　表示メソッド引数型（１、１）に　「java/lang/Object」を　入れ、
    表示単語情報の　表示メソッド引数数（１）に　１を　入れ、

    表示単語情報の　表示単語関数名（２）に　「何一行表示」を　入れ
    表示単語情報の　表示メソッドインスタンス名（２）に　「out」を　入れ
    表示単語情報の　表示メソッド名（２）に　「println」を　入れ
    表示単語情報の　表示メソッド型全体（２）に　「(Ljava/lang/Object;)V」を　入れ
    表示単語情報の　表示メソッド引数型（２、１）に　「java/lang/Object」を　入れ、
    表示単語情報の　表示メソッド引数数（２）に　１を　入れ、

    表示単語情報の　表示単語関数名（３）に　「表示」を　入れ
    表示単語情報の　表示メソッドインスタンス名（３）に　「out」を　入れ
    表示単語情報の　表示メソッド名（３）に　「print」を　入れ
    表示単語情報の　表示メソッド型全体（３）に　「(Ljava/lang/String;)V」を　入れ、
    表示単語情報の　表示メソッド引数型（３、１）に　「java/lang/String」を　入れ、
    表示単語情報の　表示メソッド引数数（３）に　１を　入れ、

    表示単語情報の　表示単語関数名（４）に　「一行表示」を　入れ
    表示単語情報の　表示メソッドインスタンス名（４）に　「out」を　入れ
    表示単語情報の　表示メソッド名（４）に　「println」を　入れ
    表示単語情報の　表示メソッド型全体（４）に　「(Ljava/lang/String;)V」を　入れ
    表示単語情報の　表示メソッド引数型（４、１）に　「java/lang/String」を　入れ、
    表示単語情報の　表示メソッド引数数（４）に　１を　入れ

    表示単語情報の　表示単語関数名（５）に　「改行」を　入れ
    表示単語情報の　表示メソッドインスタンス名（５）に　「out」を　入れ
    表示単語情報の　表示メソッド名（５）に　「println」を　入れ
    表示単語情報の　表示メソッド型全体（５）に　「()V」を　入れ
    表示単語情報の　表示メソッド引数数（５）に　０を　入れ。

（インデックスー＞関数参照インデックス）
（...引数型インデックス２・引数型インデックス１・）
（インスタンスインデックス）
表示標準関数の定数フィールドを追加するとは
    インデックスは　変数
    追加数は　変数

    （文字列・バイトー＞・）
    文字列化して追加とは
        バイト数指定で文字列化したものを、
        ランタイム定数フィールドをメモファイルに書き込み

    本体とは　
    インデックスに　入れ
    追加数を　クリアし

        ※Methodref
        メソッドランタイム定数フィールド数に　追加数を　加え
        「java/io/PrintStream」と
    	表示単語情報型の　表示メソッド名（インデックス）と
        表示単語情報型の　表示メソッド型全体（インデックス）で
            Methodランタイム定数フィールド情報を得て　偽？　ならば
            ランタイム定数フィールドをメモファイルに書き込み
            追加数を　増加させ
        つぎに
        ※！
        （Method参照インデックスが積まれた）

        表示単語情報型の　表示メソッド引数数（インデックス）を　回数指定し、
            メソッドランタイム定数フィールド数と 追加数を　加え
            表示単語情報型の　表示メソッド引数型（インデックス、回数）で
                クラスランタイム定数フィールド情報を得て　偽？　ならば
                ランタイム定数フィールドをメモファイルに書き込み
                追加数を　増加させ
            つぎに
        繰り返し

        ※Fieldref
        メソッドランタイム定数フィールド数に　追加数を　加え
        「java/lang/System」と
        表示単語情報型の　表示メソッドインスタンス名（インデックス）と
        「Ljava/io/PrintStream;」で
            Fieldランタイム定数フィールド情報を得て　偽？　ならば
            ランタイム定数フィールドをメモファイルに書き込み
            追加数を　増加させ
        つぎに

        メソッドランタイム定数フィールド数を
            追加数だけ　増加させ。

（インデックスー＞・）
※    15: getstatic     #16                 // Field java/lang/System.out:Ljava/io/PrintStream;
※　　ループ
※    18: aload_1
※    19: invokevirtual                 // Method java/util/Stack.pop:()Ljava/lang/Object;
※　　checkcast
※　　ループ終わり
※    22: invokevirtual #26                 // Method java/io/PrintStream.println:(Ljava/lang/Object;)V
単語認識表示単語時の処理とは、
    インデックスは　変数
    オフセットは　変数

    オフセットに　メソッドランタイム定数フィールド数を　入れ
    「これは標準表示関数です」を　文字列をテスト表示し、
    
    インデックスに　入れ

    インデックスをつかい
    表示標準関数の定数フィールドを追加し、

    ※ここから、オペコード情報
    ※getstatic
    （スタックで）　getstaticのデータを得て　オペコードのバイナリを追加し

    表示単語情報の　表示メソッド引数数（インデックス）を　回数指定し、
        ※aload_1
        Stackaloadのデータを得て　オペコードのバイナリを追加し
        ※invokevirtual //Method
        pop関数を得て、invokevirtualのデータを得て　オペコードのバイナリを追加し
        ※checkcast #11+2i
        （スタックで）
        checkcastのデータを得て、オペコードのバイナリを追加することを
    繰り返す

    ※invokevirtual //Method
    （スタックで）
    invokevirtualのデータを得て　オペコードのバイナリを追加すること。
