メソッド関数名長さは　定数　５０。

メソッド認識構造体は　構造体
        メソッド認識された関数名は　文字列実体　長さ　メソッド関数名長さ
        メソッド認識された関数型は　文字列

        メソッドローカル変数数は　変数
        ※ローカル変数メモファイルの情報量と対応している。
        現在使用中のメソッドローカル変数数は　変数

        メソッドランタイム定数フィールド数は　変数

        メソッドスタックマップテーブル情報数は　変数
        メソッドスタックマップテーブルオフセットは　変数

        Stack変数インデックスは　変数
        回数変数インデックスは　変数

        メソッドループ操作単語数は　変数
        メソッドループ中フラグは　バイト変数

    全体は
        メソッド認識された関数名と　メソッド認識された関数型と
        メソッドローカル変数数と
        現在使用中のメソッドローカル変数数と
        メソッドランタイム定数フィールド数と
        メソッドスタックマップテーブル情報数と
        メソッドスタックマップテーブルオフセットと
        Stack変数インデックスと
        回数変数インデックスと
        メソッドループ操作単語数と
        メソッドループ中フラグ。

メソッドランタイム定数フィールドメモファイル名は　文字列定数
    ".\data\runtimefieldmemo.dat"。

メソッドオペコードメモファイル名は　文字列定数
    ".\data\opecodememo.dat"。

メソッドスタックマップテーブルメモファイル名は　文字列定数
    ".\data\stackmaptablememo.dat"。

メソッドローカル変数メモファイル名は　文字列定数
    ".\data\localvariablememo.dat"。

メソッドループ操作単語メモファイル名は　文字列定数
    ".\data\loopoperatememo.dat"。

（・->・）
メソッド認識構造体初期化とは
    メソッド認識構造体を　クリアし
    回数変数インデックスに　－１を　入れ。

オペコードをメモファイルに書き込むとは　仮定義。

（数値・バイト数ー＞・）
オペコードのバイナリを追加とは
    バイト数指定で文字列化し、
    オペコードをメモファイルに書き込むこと。

（バイナリー＞・）
オペコードのバイナリを文字列追加とは
    オペコードをメモファイルに書き込むこと。

スタックマップテーブルをメモファイルに書き込むとは　仮定義。

（数値・バイト数ー＞・）
スタックマップテーブルのバイナリを追加とは
    バイト数指定で文字列化し、
    スタックマップテーブルをメモファイルに書き込むこと。

（バイナリー＞・）
スタックマップテーブルのバイナリを文字列追加とは
    スタックマップテーブルをメモファイルに書き込むこと。

ローカル変数をメモファイルに書き込むとは　仮定義。

（数値・バイト数ー＞・）
ローカル変数のバイナリを追加とは
    バイト数指定で文字列化し、
    ローカル変数をメモファイルに書き込むこと。

（バイナリー＞・）
ローカル変数のバイナリを文字列追加とは
    ローカル変数をメモファイルに書き込むこと。

（数値ー＞・）
※全体だけでなく現在のも増加
メソッドローカル変数数を指定数増加とは
    複写し
    メソッドローカル変数数を　増加
    現在使用中のメソッドローカル変数数を　増加。

（・ー＞枠取りしたインデックス）
メソッドローカル変数を一つ枠取りとは
    現在使用中のメソッドローカル変数数を　一つ増加させ
        現在使用中のメソッドローカル変数数より　一つ引いてつみ
    現在使用中のメソッドローカル変数数が
    メソッドローカル変数数より　大きい　ならば
        現在使用中のメソッドローカル変数数を
        メソッドローカル変数数に　入れ
    つぎに。