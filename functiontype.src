関数認識情報は　型紙
        認識された関数名は　文字列
        認識された関数型は　文字列

        ローカル変数数は　変数

        ランタイム定数フィールドメモファイル名は　文字列
        ランタイム定数フィールド数は　変数

        オペコードと引数のデータのバイナリは　文字列実体　長さ　３００バイト

        スタックマップテーブル情報は　文字列実体　長さ　２００バイト
        スタックマップテーブル情報数は　変数
        スタックマップテーブルオフセットは　変数

    全体は
        認識された関数名と　認識された関数型と
        ローカル変数数と
        ランタイム定数フィールドメモファイル名と
        ランタイム定数フィールド数と
        スタックマップテーブル情報と　スタックマップテーブル情報数と
        スタックマップテーブルオフセットと
        オペコードと引数のデータのバイナリ。

※複数の構造体を一度に併用するとバグのもとになる(修正予定)
（構造体->・）
関数認識構造体初期化とは
    操作構造体は　構造体情報

    操作構造体に　入れ　操作構造体を　クリアし

    「.\data\runtimefieldmemo.dat」を
    操作構造体の　ランタイム定数フィールドメモファイル名に　入れ。

（数値・バイト数・構造体情報ー＞・）
オペコードのバイナリを追加とは
    操作構造体は　構造体情報 
    操作構造体に　入れ、
    バイト数指定で文字列化し、
    操作構造体の　オペコードと引数のデータのバイナリに　追加すること。

（バイナリ・構造体情報ー＞・）
オペコードのバイナリを文字列追加とは
    操作構造体は　構造体情報 
    操作構造体に　入れ、
    操作構造体の　オペコードと引数のデータのバイナリに　追加すること。