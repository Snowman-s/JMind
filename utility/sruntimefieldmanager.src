（文字列ー＞バイナリ）
ＵＴＦ８のランタイム定数フィールドを得るとは
    ランタイム定数フィールドバイナリは　文字列実体　長さ　１００バイト
    検査文字列は　文字列

    ランタイム定数フィールドバイナリを　クリアし
    検査文字列に　入れ

    ０１００００Ｈに　検査文字列の　バイト数を　加え ３バイトで　バイト数指定で文字列化し　ランタイム定数フィールドバイナリに　追加し、
    検査文字列を　ランタイム定数フィールドバイナリに　追加し、
    ランタイム定数フィールドバイナリを　返すこと。

push関数を得るとは
    ３を　返すこと。

pop関数を得るとは
    ７を　返すこと。

Stackクラスデータを得るとは
    １を　返すこと。

Stackイニシャライザを得るとは
    １１を　返すこと。

※   #1 = Class              #2             // java/util/Stack
※   #2 = Utf8               java/util/Stack

※   #3 = Methodref          #1.#4          // java/util/Stack.push:(Ljava/lang/Object;)Ljava/lang/Object;
※   #4 = NameAndType        #5:#6          // push:(Ljava/lang/Object;)Ljava/lang/Object;
※   #5 = Utf8               push
※   #6 = Utf8               (Ljava/lang/Object;)Ljava/lang/Object;

※   #7 = Methodref          #1.#8         // java/util/Stack.pop:()Ljava/lang/Object;
※   #8 = NameAndType        #9:#10        // pop:()Ljava/lang/Object;
※   #9 = Utf8               pop
※  #10 = Utf8               ()Ljava/lang/Object;

※  #11 = Methodref          #1.#12          // java/util/Stack."<init>":()V
※  #12 = NameAndType        #13:#14          // "<init>":()V
※  #13 = Utf8               <init>
※  #14 = Utf8               ()V
（・ー＞文字列・定数フィールド数）
デフォルトのランタイム定数フィールドを得るとは
    ランタイム定数フィールドバイナリは　文字列実体　長さ　２００バイト

    （文字列・バイトー＞・）
    文字列化して追加とは
        バイト数指定で文字列化したものを、　ランタイム定数フィールドバイナリに　追加し
    
    本体とは
    ランタイム定数フィールドバイナリを　クリアし

    ０７Ｈと　２を　二バイト合成したものを　３バイトで　文字列化して追加し、
    「java/util/Stack」で　ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て　ランタイム定数フィールドバイナリに　追加し、
    
    ０ＡＨを　１バイトで　文字列化して追加し　１を　２バイトで　文字列化して追加し　４を　２バイトで　文字列化して追加し、
    ０ＣＨと　１バイトで　文字列化して追加し　５を　２バイトで　文字列化して追加し　６を　２バイトで　文字列化して追加し、
    「push」で　ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て　ランタイム定数フィールドバイナリに　追加し、
    「(Ljava/lang/Object;)Ljava/lang/Object;」で　ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て　ランタイム定数フィールドバイナリに　追加し、

    ０ＡＨを　１バイトで　文字列化して追加し　１を　２バイトで　文字列化して追加し　８を　２バイトで　文字列化して追加し、
    ０ＣＨと　１バイトで　文字列化して追加し　９を　２バイトで　文字列化して追加し　１０を　２バイトで　文字列化して追加し、
    「pop」で　ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て　ランタイム定数フィールドバイナリに　追加し、
    「()Ljava/lang/Object;」で　ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て　ランタイム定数フィールドバイナリに　追加し、

    ０ＡＨを　１バイトで　文字列化して追加し　１を　２バイトで　文字列化して追加し　１２を　２バイトで　文字列化して追加し、
    ０ＣＨと　１バイトで　文字列化して追加し　１３を　２バイトで　文字列化して追加し　１４を　２バイトで　文字列化して追加し、
    「<init>」で　ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て　ランタイム定数フィールドバイナリに　追加し、
    「()V」で　ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て　ランタイム定数フィールドバイナリに　追加し、
    ランタイム定数フィールドバイナリと　１４を　返すこと。

※   #n+1 = Class              #n+2             // java/lang/Object
※   #n+2 = Utf8               java/lang/Object
※   #n+3 = Class              #n+4             // ...
※   #n+4 = Utf8               ...
（クラス名(SJIS)・現在のランタイム定数フィールドの数ー＞文字列・現在のランタイム定数フィールドの数）
クラスのランタイム定数フィールドを取得とは
    ランタイム定数フィールドバイナリは　文字列実体　長さ　１００バイト
    現在のランタイム定数フィールドの数は　変数
    クラス名は　文字列
    （文字列・バイトー＞・）
    文字列化して追加とは
        バイト数指定で文字列化したものを、　ランタイム定数フィールドバイナリに　追加し

    本体とは
    ランタイム定数フィールドバイナリを　クリアし
    クラス名と　現在のランタイム定数フィールドの数に　入れ
    
    ０７Ｈと　現在のランタイム定数フィールドの数に　二つ加えたものを　二バイト合成したものを　３バイトで　文字列化して追加し、
    「java/lang/Object」で　ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て　ランタイム定数フィールドバイナリに　追加し、

    ０７Ｈと　現在のランタイム定数フィールドの数に　４つ　加えたものを　二バイト合成したものを　３バイトで　文字列化して追加し、
    クラス名を　ＵＴＦ８へ変換し　ＵＴＦ８のランタイム定数フィールドを得て　ランタイム定数フィールドバイナリに　追加し、
    
    ランタイム定数フィールドバイナリと　現在のランタイム定数フィールドの数に　４を　加えたもの。
